{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/util.js","./node_modules/ol/AssertionError.js","./node_modules/ol/asserts.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Corner.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/math.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/Object.js","./node_modules/ol/layer/Property.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/coordinate.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/render/Event.js","./node_modules/ol/css.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/proj/Units.js","./node_modules/ol/ViewHint.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/sphere.js","./node_modules/ol/proj.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/View.js","./node_modules/ol/size.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/Map.js","./node_modules/ol/control.js","./node_modules/ol/interaction.js","./node_modules/ol/layer/TileProperty.js","./node_modules/ol/layer/BaseTile.js","./node_modules/ol/ImageState.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/TileRange.js","./node_modules/ol/renderer/canvas/TileLayer.js","./node_modules/ol/layer/Tile.js","./node_modules/rbush/rbush.min.js","./node_modules/ol/style/Image.js","./node_modules/ol/colorlike.js","./node_modules/ol/style/RegularShape.js","./node_modules/ol/style/Circle.js","./node_modules/ol/style/Fill.js","./node_modules/ol/style/Stroke.js","./node_modules/ol/style/Style.js","./node_modules/ol/layer/BaseVector.js","./node_modules/ol/render/canvas/Instruction.js","./node_modules/ol/render/VectorContext.js","./node_modules/ol/render/canvas/Builder.js","./node_modules/ol/render/canvas/ImageBuilder.js","./node_modules/ol/render/canvas/LineStringBuilder.js","./node_modules/ol/render/canvas/PolygonBuilder.js","./node_modules/ol/style/TextPlacement.js","./node_modules/ol/geom/flat/straightchunk.js","./node_modules/ol/render/canvas/TextBuilder.js","./node_modules/ol/render/canvas/BuilderGroup.js","./node_modules/ol/render/canvas/BuilderType.js","./node_modules/ol/geom/flat/textpath.js","./node_modules/ol/geom/flat/length.js","./node_modules/ol/render/canvas/Executor.js","./node_modules/ol/render/canvas/ExecutorGroup.js","./node_modules/ol/render/canvas/Immediate.js","./node_modules/ol/style/IconAnchorUnits.js","./node_modules/ol/style/IconOrigin.js","./node_modules/ol/ImageBase.js","./node_modules/ol/Image.js","./node_modules/ol/style/IconImage.js","./node_modules/ol/style/Icon.js","./node_modules/ol/style/Text.js","./node_modules/ol/renderer/vector.js","./node_modules/ol/renderer/canvas/VectorLayer.js","./node_modules/ol/render/canvas/hitdetect.js","./node_modules/ol/layer/Vector.js","./node_modules/ol/Feature.js","./node_modules/ol/geom/GeometryCollection.js","./node_modules/ol/format/Feature.js","./node_modules/ol/format/FormatType.js","./node_modules/ol/format/JSONFeature.js","./node_modules/ol/geom/flat/interpolate.js","./node_modules/ol/geom/LineString.js","./node_modules/ol/geom/MultiLineString.js","./node_modules/ol/geom/MultiPoint.js","./node_modules/ol/geom/MultiPolygon.js","./node_modules/ol/geom/flat/center.js","./node_modules/ol/format/GeoJSON.js","./node_modules/ol/structs/RBush.js","./node_modules/ol/source/Source.js","./node_modules/ol/source/VectorEventType.js","./node_modules/ol/loadingstrategy.js","./node_modules/ol/featureloader.js","./node_modules/ol/source/Vector.js","./src/marsLandingSites.json","./node_modules/ol/Tile.js","./node_modules/ol/ImageTile.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/source/common.js","./node_modules/ol/reproj/Tile.js","./node_modules/ol/reproj/common.js","./node_modules/ol/structs/LRUCache.js","./node_modules/ol/tilecoord.js","./node_modules/ol/TileCache.js","./node_modules/ol/source/TileEventType.js","./node_modules/ol/tilegrid/TileGrid.js","./node_modules/ol/tilegrid.js","./node_modules/ol/source/Tile.js","./node_modules/ol/tileurlfunction.js","./node_modules/ol/source/UrlTile.js","./node_modules/ol/source/TileImage.js","./node_modules/ol/source/XYZ.js","./src/main.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Mars 2\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          47,\n          -45\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Mars 3\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -158,\n          -45\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Mars 6\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -19.42,\n          -23.9\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Viking 1\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -49.97,\n          22.48\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Viking 2\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          134.282101,\n          47.668093\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Mars Polar Lander\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          165.2,\n          -76.57\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Pathfinder\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -33.55,\n          19.33\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Beagle 2\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          90,\n          10.6\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Spirit\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          175.47848,\n          -14.571892\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Opportunity\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -5.526599999999917,\n          -1.9462\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Phoenix\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -125.74922200000003,\n          68.21883\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Curiosity\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          137.4417,\n          -4.5895\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"InSight\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          135.623,\n          4.502\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"ExoMars Schiaparelli\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          6.207599999999957,\n          -4.57\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"ExoMars rover\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          -25,\n          18.1\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Mars 2020 rover\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          77.5945,\n          18.3628\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Zhurong\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          109.9,\n          25.1\n        ]\n      }\n    }\n  ]\n}","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorSource from 'ol/source/Vector';\nimport { Circle as CircleStyle, Fill, Stroke, Style, Text } from 'ol/style';\nimport geojsonObject from './marsLandingSites.json';\nimport XYZ from 'ol/source/XYZ';\n\n// Points Style\nconst pointStyleFunction = (feature, resolution) => {\n  return new Style({\n    image: new CircleStyle({\n      radius: 10,\n      fill: new Fill({ color: 'rgba(255, 0, 0, 0.5)' }),\n      stroke: new Stroke({ color: 'red', width: 1 })\n    }),\n    text: new Text({\n      text: feature.get('name'),\n      font: 'bold 16px Open Sans',\n      fill: new Fill({\n        color: '#fff'\n      }),\n      stroke: new Stroke({\n        color: 'red',\n        width: 1\n      }),\n      offsetY: -16,\n      offsetX: 16,\n      textAlign: 'left',\n      textBaseline: 'middle'\n    })\n  });\n};\n\n// Mars Vector Layer\nvar marsData = new VectorSource({\n  projection: 'EPSG:4326',\n  features: new GeoJSON().readFeatures(geojsonObject),\n  wrapX: false\n});\nvar marsLayer = new VectorLayer({\n  source: marsData,\n  style: pointStyleFunction,\n  declutter: false\n});\n\n// Basemap Layer\n// https://astrowebmaps.wr.usgs.gov/webmapatlas/Layers/maps.html\n// OpenPlanetary Basemaps : https://www.openplanetary.org/opm/basemaps\nconst layers = [\n  new TileLayer({\n    source: new XYZ({\n      url: 'http://s3-eu-west-1.amazonaws.com/whereonmars.cartodb.net/celestia_mars-shaded-16k_global/{z}/{x}/{-y}.png',\n      wrapX: false\n    }),\n    projection: 'EPSG:4326'\n  }),\n  marsLayer\n];\n\n// Create Map\nconst map = new Map({\n  layers: layers,\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:4326',\n    center: [0, 0]\n  })\n});\n\n// Zoom to features\nlet extent = marsData.getExtent();\nmap.getView().fit(extent, map.getSize());\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$f7bbc97715b7cef936b659025f276afb$export$default","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$numberSafeCompareFunction","b","$7c21d7646a0313abf7b847efa68bfceb$export$linearFindNearest","arr","target","direction","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$reverseSubArray","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$extend","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$equals","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$TRUE","$8ff7925ef9afa7e69604ab9620edac22$export$FALSE","$8ff7925ef9afa7e69604ab9620edac22$export$VOID","$cd365e7aabd14aaf6df378f6a61e84d7$export$abstract","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$getUid","obj","ol_uid","String","extendStatics","$cd365e7aabd14aaf6df378f6a61e84d7$export$VERSION","$fd652548d0f540d94aaff6aa830746d2$var$__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","$fd652548d0f540d94aaff6aa830746d2$export$default","_super","AssertionError","code","_this","message","split","name","$2ce41f61858dd350a0b2670bdab4e597$export$assert","assertion","errorCode","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$apply","transform","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$makeInverse","source","mat","det","c","f","$af95442a94d1862a138c401177ef0c4b$export$toString","join","$8ebfb36ef5532881c5652b708da2c120$export$boundingExtent","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$createEmpty","ii","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$buffer","value","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$clone","slice","$8ebfb36ef5532881c5652b708da2c120$export$closestSquaredDistanceXY","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$containsCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$containsXY","$8ebfb36ef5532881c5652b708da2c120$export$containsExtent","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdate","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateEmpty","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$extendFlatCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$equals","$8ebfb36ef5532881c5652b708da2c120$export$extend","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$extendXY","min","max","$8ebfb36ef5532881c5652b708da2c120$export$forEachCorner","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$getBottomLeft","$8ebfb36ef5532881c5652b708da2c120$export$getBottomRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopLeft","$8ebfb36ef5532881c5652b708da2c120$export$getArea","area","$8ebfb36ef5532881c5652b708da2c120$export$isEmpty","$8ebfb36ef5532881c5652b708da2c120$export$getWidth","$8ebfb36ef5532881c5652b708da2c120$export$getHeight","$8ebfb36ef5532881c5652b708da2c120$export$getCenter","$8ebfb36ef5532881c5652b708da2c120$export$getCorner","corner","$8ebfb36ef5532881c5652b708da2c120$export$getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$getIntersection","intersection","$8ebfb36ef5532881c5652b708da2c120$export$intersects","$8ebfb36ef5532881c5652b708da2c120$export$applyTransform","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$clamp","$916dab65013919ad0345478f9a9f4e0f$export$cosh","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$log2","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$squaredSegmentDistance","t","$916dab65013919ad0345478f9a9f4e0f$export$squaredDistance","$916dab65013919ad0345478f9a9f4e0f$export$toRadians","angleInDegrees","PI","$916dab65013919ad0345478f9a9f4e0f$export$modulo","r","$916dab65013919ad0345478f9a9f4e0f$export$lerp","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$asString","color","$ddc7f5de3664aab559d1c545c366e59d$export$toString","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$fromString","s","MAX_CACHE_SIZE","key","g","exec","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","hasAlpha","parseInt","substr","indexOf","$ddc7f5de3664aab559d1c545c366e59d$export$normalize","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$asArray","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$export$shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","set","setSize","maxCacheSize","$003acff01e79c0a73122c747343d2e59$export$default","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","$e1ac967f910869e98e549bfd20a1853c$export$assign","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$clear","object","property","$e1ac967f910869e98e549bfd20a1853c$export$getValues","values","$e1ac967f910869e98e549bfd20a1853c$export$isEmpty","$99fe3f3343ef18166bd431edc467d890$var$__extends","__extends","$99fe3f3343ef18166bd431edc467d890$export$default","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","keys","index","splice","$7961378a294a4943979a10a4df4a3fcf$export$listen","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$listenOnce","$7961378a294a4943979a10a4df4a3fcf$export$unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","$02e80757fefec0a9636ae28d17c9fab2$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$02e80757fefec0a9636ae28d17c9fab2$export$unByKey","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$ObjectEvent","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$export$default","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$getChangeEventType","opt_silent","applyProperties","unset","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$3a8294651627eb74246351f5b596cf68$var$__extends","$3a8294651627eb74246351f5b596cf68$export$default","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","$1935b85c22cfc539ea58e141ab0b37d6$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c81aa09fb137106970dbc142b1e89ec3$export$default","createRenderer","hasRenderer","$1935b85c22cfc539ea58e141ab0b37d6$export$inView","viewState","zoom","$29884e9b826cd25109649ab0c360e769$export$equals","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$rotate","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$29884e9b826cd25109649ab0c360e769$export$getWorldsAway","$52488a0195cf0e38344877f5a3896831$var$__extends","$52488a0195cf0e38344877f5a3896831$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_HIDDEN","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_CONTROL","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_COLLAPSED","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$FIREFOX","$2016f251f21b02e27a5ca36c37510540$export$WEBKIT","$2016f251f21b02e27a5ca36c37510540$export$MAC","$2016f251f21b02e27a5ca36c37510540$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$IMAGE_DECODE","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$removeNode","node","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultFillStyle","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineCap","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineDash","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineJoin","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultStrokeStyle","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultTextAlign","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultTextBaseline","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultPadding","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$checkedFonts","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$labelCache","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","div","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$textHeights","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextWidth","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextHeight","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureAndCacheTextWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$drawImageOrLabel","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","event_1","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","display","getDataAtPixel","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$CollectionEvent","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$export$default","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$default","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$default","MapEvent","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$eeb9190850355aed8fc5d92349a26bc6$export$DROP","$eeb9190850355aed8fc5d92349a26bc6$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$var$__extends","$6bfe069e85349c527971d875462feeac$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$df0b68b08946bf3d8de6eeca4fba3a5f$export$default","$df0b68b08946bf3d8de6eeca4fba3a5f$export$METERS_PER_UNIT","$c1e1f889297e115e83bec772196e32bf$export$DEFAULT_TILE_SIZE","$1514cc7c23ad291d61b727f0ef5e4246$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$RADIUS","$7d5079714e2786ec6bee07910f0d8a86$export$HALF_SIZE","$7d5079714e2786ec6bee07910f0d8a86$export$EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$WORLD_EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$MAX_SAFE_Y","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$export$PROJECTIONS","$7d5079714e2786ec6bee07910f0d8a86$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$toEPSG4326","atan","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$EXTENT","$655738a66489cc3574c072262645bff6$export$METERS_PER_UNIT","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$export$PROJECTIONS","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$add","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$DEFAULT_RADIUS","$525020a649871896a05d6fe288616b91$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$524e9c84a4c58bd58490804da4c772c6$export$cloneTransform","$524e9c84a4c58bd58490804da4c772c6$export$identityTransform","$524e9c84a4c58bd58490804da4c772c6$export$addProjection","$524e9c84a4c58bd58490804da4c772c6$export$get","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$getTransformFromProjections","vertices","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentProjections","projections","$524e9c84a4c58bd58490804da4c772c6$export$addProjections","$524e9c84a4c58bd58490804da4c772c6$export$createProjection","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$getTransform","$524e9c84a4c58bd58490804da4c772c6$export$transform","$524e9c84a4c58bd58490804da4c772c6$export$transformExtent","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$getUserProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserCoordinate","$524e9c84a4c58bd58490804da4c772c6$export$fromUserCoordinate","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserExtent","$524e9c84a4c58bd58490804da4c772c6$export$fromUserExtent","$61ba71c2b15c8b7e6577526180db0da5$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$none","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$disable","$4c6a822b604dbfa9a10722399f7335d0$export$none","$8717569d70d85bd7f28c8c1b2c37daee$export$easeIn","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$easeOut","$8717569d70d85bd7f28c8c1b2c37daee$export$inAndOut","$8717569d70d85bd7f28c8c1b2c37daee$export$linear","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentTransforms","$3f4f29b0a4be88d8241f933ff6121a33$export$transform2D","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$rotate","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$__extends","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","$57ce72c0539154dec2abdc81ffcff6df$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$57ce72c0539154dec2abdc81ffcff6df$export$transformGeom2D","simpleGeometry","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$maxSquaredDelta","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$arrayMaxSquaredDelta","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestArrayPoint","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinates","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinatesArray","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$snap","$a357f0a07bdcadd773e93ca791a42f7b$export$quantize","$a357f0a07bdcadd773e93ca791a42f7b$export$quantizeArray","simplifiedEnds","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinates","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinatesArray","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$linearRing","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$linearRings","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$acd1b863667085614d305475fd6c1d27$var$__extends","$acd1b863667085614d305475fd6c1d27$export$default","Point","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsExtent","outside","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsXY","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingsContainsXY","$67787df47ebd352536b767ba5aa6ea83$export$getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$419a691625de72e89acadcc033e1165f$export$forEach","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRingArray","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRing","$221ffa684d4ba252080508824e602b78$export$coordinates","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingIsClockwise","edge","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingsAreOriented","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRings","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRingsArray","$bffbcd35af658c4477627697774de1c2$var$__extends","$bffbcd35af658c4477627697774de1c2$export$default","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$fromExtent","XY","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","$19fadbefe1b7e34cc76223b5c3e441cc$export$default","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$19fadbefe1b7e34cc76223b5c3e441cc$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$8556eff40cf4f1624cd78ff7ea054c5b$export$toSize","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","$b198bbb8a7fca092de94dd3a772c1343$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","INTERACTING","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$var$__extends","$8316c877d328ebfc4f4b917229eec057$export$default","Control","target_","listenerKeys","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","$194d017bd833b991c2c712fa2ff5b0e5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$aef56543978371a8090d728a4f107ac0$var$__extends","$aef56543978371a8090d728a4f107ac0$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$9812beea87bdcda9027d52b89085c87c$var$__extends","$9812beea87bdcda9027d52b89085c87c$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$1ad0cf5090e3852174414bfc8cc27b9e$export$default","Interaction","setActive","active","$1ad0cf5090e3852174414bfc8cc27b9e$export$pan","$1ad0cf5090e3852174414bfc8cc27b9e$export$zoomByDelta","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","$4eeedd039b7e6d5b8277b175715f9541$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$0714aed143b912743afff175db44c1dc$var$__extends","$0714aed143b912743afff175db44c1dc$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$0714aed143b912743afff175db44c1dc$export$centroid","$054715504eaffdc825d0a6ada99ec596$export$all","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$focusWithTabindex","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$focus","$054715504eaffdc825d0a6ada99ec596$export$always","$054715504eaffdc825d0a6ada99ec596$export$mouseActionButton","$054715504eaffdc825d0a6ada99ec596$export$noModifierKeys","$054715504eaffdc825d0a6ada99ec596$export$shiftKeyOnly","$054715504eaffdc825d0a6ada99ec596$export$targetNotEditable","tagName","$054715504eaffdc825d0a6ada99ec596$export$mouseOnly","pointerType","$054715504eaffdc825d0a6ada99ec596$export$primaryAction","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","$959ec1b544453a9fa4f0e9221c3bb0b0$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$var$__extends","$719e5208cd50905e41bacbcae2219883$export$default","DragRotate","lastAngle_","$d0055a036577a61fd8306330947568c7$var$__extends","$d0055a036577a61fd8306330947568c7$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$DragBoxEvent","DragBoxEvent","$275b26378704892d776581791f32dc0e$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","$b5cd6c68e27395a36aa4c8d3c5395250$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","$55ea853e77e2fe25fa1a8793cb31a3bf$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","$f7a99b9e7b1a72242a3eb408b28d3563$export$Mode","$f7a99b9e7b1a72242a3eb408b28d3563$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$var$__extends","$601b81cfcc535d77832cc96f04e942a1$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$976448907138da16f7612e32ecc55ac7$var$__extends","$976448907138da16f7612e32ecc55ac7$export$default","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","$ab70eb0a0a56b112261264db1ea7acab$export$default","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ae15ed96a99c1303ea67938747c94fca$var$__extends","$ae15ed96a99c1303ea67938747c94fca$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$ac230d10056414a40eb774bd091234f1$var$__extends","$ac230d10056414a40eb774bd091234f1$export$default","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$6a958d3d10a45fbc13d601def6cb4731$export$default","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$createOrUpdate","$21101e8f6691f861098a74ca233ba3e1$var$__extends","$21101e8f6691f861098a74ca233ba3e1$export$default","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","LOADED","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$7f639b92eb9591e7aded56644548f656$var$__extends","$7f639b92eb9591e7aded56644548f656$export$default","TileLayer","o","u","_maxEntries","_minEntries","leaf","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","$a51010926fccd7fa7fa549e12811b655$exports","RBush","$96f7f946d494434256fc7391bfca3d81$export$default","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$asColorLike","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","$9395bcf7fa5c622dff9d678b4abf4bba$export$default","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$var$__extends","$19d3c8bef588e205c4ab8014047de833$export$default","CircleStyle","setRadius","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$default","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$default","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$export$default","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$createDefaultStyle","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$default","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$75febe525c6e0d71892cea5e044a142c$export$default","$75febe525c6e0d71892cea5e044a142c$export$fillInstruction","$75febe525c6e0d71892cea5e044a142c$export$strokeInstruction","$75febe525c6e0d71892cea5e044a142c$export$beginPathInstruction","$75febe525c6e0d71892cea5e044a142c$export$closePathInstruction","$98c4b84222a5e84ec508cd638c4e0b8c$export$default","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$var$__extends","$ca67e4c506ae561bc3174e981b55d257$export$default","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","MULTI_POLYGON","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","$072d5e6cee1f9ae87cd55eb588566cc6$export$default","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","$28ceeb2640c662153e0cc1bb27e7eea9$export$default","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$default","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","SET_FILL_STYLE","circleInstruction","$f19e98a3c9584b88eb9c26a752a19276$export$matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","$7e7051822986fcb02ea0e43ac0707b32$export$TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$7e7051822986fcb02ea0e43ac0707b32$export$default","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","Circle","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","Default","$ca67e4c506ae561bc3174e981b55d257$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","LineString","$28ceeb2640c662153e0cc1bb27e7eea9$exports","Text","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$default","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$c028848ec55b72b61f5eaf0ec6396be2$export$lineStringLength","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$default","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","renderWidth","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","POLYGON","LINE_STRING","IMAGE","TEXT","$c6e46405591acfe99e5a94d22fbe8573$export$default","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$getPixelIndexArray","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","$9f8df4495769241e9ec70201b90e0eaa$export$default","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$e65a38a3837120ad833711b5930f5912$var$__extends","$e65a38a3837120ad833711b5930f5912$export$default","ImageBase","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","$2fc4e1887f4ffa14e16ea647fd21482c$export$listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$export$default","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","IDLE","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$get","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","$4de6336f82b6fd9bc7cf688bb41b8b96$export$default","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","FRACTION","TOP_LEFT","setAnchor","iconImageSize","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$default","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$defaultOrder","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$getTolerance","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$renderFeature","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries","$c2243072b6513ba407326b2a30b1374a$var$__extends","$c2243072b6513ba407326b2a30b1374a$export$default","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","endWorld","world","clipped","Promise","resolve","transforms","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","iconContext","byGeometryType","POINT","zIndexKeys","geomAndStyle","kk","resultFeatures","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","declutterBuilderGroup","userTransform","loadFeatures","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$default","VectorLayer","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","$fe05caf5f991aea82bd67c9bebabc467$export$default","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","$fe05caf5f991aea82bd67c9bebabc467$export$createStyleFunction","setId","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","$8af1af76f23419d9d724a1b0182ffb00$export$default","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$508255911b6472d9d16e9a97599ab01e$export$default","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$transformGeometryWithOptions","write","transformed","decimals","power_1","$1a6c956f7a172f55a86db631d141a623$var$__extends","$1a6c956f7a172f55a86db631d141a623$export$default","JSONFeature","readFeatureFromObject","$1a6c956f7a172f55a86db631d141a623$var$getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","$168654b72fccbd53f77518b62ff915e1$export$interpolatePoint","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$168654b72fccbd53f77518b62ff915e1$export$lineStringCoordinateAtM","extrapolate","lo","hi","m0","$f3208b74dbadea817236410092d4ed69$var$__extends","$f3208b74dbadea817236410092d4ed69$export$default","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$default","lineStrings","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","midpoints","midpoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","$0c87ec0f12a2b62262bf5859757b8a2b$export$default","appendPoint","multiPoint","getPoint","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","$3f89ce735a32ce0bc16220a89ae67b2f$export$default","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","$5d8566a0c1419db39058842324e9a300$var$__extends","$5d8566a0c1419db39058842324e9a300$export$default","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","$5d8566a0c1419db39058842324e9a300$var$readGeometry","geoJSONFeatures","crs","$5d8566a0c1419db39058842324e9a300$var$writeGeometry","objects","$5d8566a0c1419db39058842324e9a300$var$readPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readGeometryCollectionGeometry","geoJSON","$5d8566a0c1419db39058842324e9a300$var$writePointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeLineStringGeometry","rightHanded","$5d8566a0c1419db39058842324e9a300$var$writePolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeGeometryCollectionGeometry","$e311f93de68f58225dfc37d89d1dcffc$export$default","opt_maxEntries","rbush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","$6a9611a0560ac769e67fadc6cfef9a2c$export$default","Source","attributions_","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","$26b846260444bc742bddf88d96721338$export$all","$2ef5772bb5b0926a9ba82fc2a88f3163$export$xhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$loadFeaturesXhr","addFeatures","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$VectorSourceEvent","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$export$default","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","$6ea2e09c0ee686e4fcf344e90f929221$export$default","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","getTileCoord","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","$69031f3b45b1bb2d223c45e6bbe47b36$export$default","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$default","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","u1","v1","u2","v2","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$render","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","augmentedMatrix","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","$97e37be8733b1927a1ed959b854a8d18$var$__extends","$97e37be8733b1927a1ed959b854a8d18$export$default","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","LOADING","sourceListenKey_1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$default","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$createOrUpdate","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$getKeyZXY","$c98d704946f2a3a0e1335bd43bccb465$export$getKey","$8328c42c04c9adada69111ec662476d9$var$__extends","$8328c42c04c9adada69111ec662476d9$export$default","TileCache","pruneExceptNewestZ","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$default","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$getForProjection","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$extentFromProjection","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForProjection","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","$cde35ab3df9629f8ffd26ea2f187b41e$export$default","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$cde35ab3df9629f8ffd26ea2f187b41e$export$TileSourceEvent","TileSourceEvent","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplates","templates","tileUrlFunctions","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTileUrlFunctions","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","$671acdd0ca89710db49a7e8e41335e8e$export$default","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","ERROR","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$export$default","TileImage","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$export$default","XYZ","xyzOptions","gridOptions","$16b5ad875ae907e2f7f79e7b8fe116cc$var$marsData","$16b5ad875ae907e2f7f79e7b8fe116cc$var$marsLayer","$16b5ad875ae907e2f7f79e7b8fe116cc$var$layers","$16b5ad875ae907e2f7f79e7b8fe116cc$var$map","$16b5ad875ae907e2f7f79e7b8fe116cc$var$extent"],"version":3,"file":"index.ad5214e5.js.map"}